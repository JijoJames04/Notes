PATH example: C:\Users\Cindy\Desktop

ls - list directory
ls c:\

Get-Help ls     //to get Help
Get-Help ls -Full   //to get more info

ls -Force c:\   //to see hidden folders


Absolute path - one that starts from the main directory
Relative path - path from your current directory

pwd     //print working directory - to see the directory you are currently in

cd      //change directory
cd c:\Users\cindy\Documents
cd ..   //to get one level back
cd ..\Desktop   //to go one step relatively back and navigate to Desktop folders
cd ~    //to get to home directory( ~ - path of your home directory)
cd ~/Desktop    //to get to Desktop folder


mkdir   //to make new directory
mkdir my_cool_folder
mkdir 'my cool folder'
mkdir my` cool` folder    \\to indicate space after the `(back-tick) is a part of the filename( ` is an escape character)


history     //to get the previously entered commands

CTRL + R    //to search in the history the commands using keywords

clear   //clear the output on the screen


cp  //to copy
cp mycoolfile.txt c:\Users\cindy\Desktop\

Wildcard - A character that's used to help select files based on a certain pattern

cd c:\Users\cindy\Documents
ls
cp *.jpg c:\Users\cindy\Desktop\  ( * - to select all jpg files)
cp 'Bird Pictures' ~/Desktop( + TAB - for auto-completion)      //to copy Bird Pictures directory to Desktop directory(But it doesn't copy the contents)
cp 'Bird Pictures' c:\Users\cindy\Desktop\ -Recurse -Verbose
//-Recurse -- to copy over the contents in that directory(doesn't output anything to CLI by default)
//-Verbose -- output one line for each file the directorybeing copied


mv  //to move from one directory to another or rename files
mv .\blue_document.txt yellow_document.txt
mv .\yellow_document.txt ~\Documents( + TAB - for auto-completion)
mv *_document.txt ~\Documents( + TAB for auto-completion)   //using wildcard


rm   //to remove files and directory( rm doesn't use recycle bin)
rm ~\text1.txt
rm ~\important_system_file( + TAB) -Force
\\ -Force -- to remove system files that cannot be simply removed using rm command
rm ~\misc_folder (asks for permission to remove all contents within it)
OR 
rm ~\misc_folder -Recurse
\\ -Recurse -- to recursively remove all files in that folder


cat     //concatenate( to see contents in a file )
cat .\important_document.txt

more    //to see the content one page at a time
more .\large_document.txt
// ENTER - advances the page by one line
// SPACE - advances the file by one page
// q - to quit and go back to terminal window

cat fruit.txt -Head 10  //shows first 10 lines of file
-Head   //to get an idea about what the file content is
cat fruit.txt -Tail 10  //shows last 10 lines of file
-Tail   //to get an idea about what the file content is


Get-Alias   //to see command corresponding to the Alias
Get-Alias ls    //to see command used by ls Alias


sls     //Select-String command to search and find words or string in files
Select-String cow farm_animals.txt
Select-String cow *.txt


ls 'c:\Program Files\' -Recurse -Filter *.exe
\\ -Filter -- to search for contents within a directory 
(The -Filter parameter will filter the results for file names that match a pattern)


echo woof > dog.txt
>   //redirect operator( over-write it )
echo woof >> dog.txt
>>  //don't over-write but append it

|   //pipeline operator sends output of one command to the input of another
cat words.txt | Select-String st    //to find words that contains st
cat words.txt | Select-String st > st_words.txt     //stores the result in a new file


1: stdout - the output
2: stderr - the error
rm secure_file 2> errors.txt    //2> - to get error messages
rm secure_file 2> $null     //output is filtered from error messages